#1.TCGA数据下载,得到RangedSummarizedExperiment（RSE）对象
library(TCGAbiolinks)
projects <- TCGAbiolinks::getGDCprojects()$project_id ##获取癌症名字
projects <- projects[grepl('^TCGA', projects, perl=TRUE)]
projects <- c("TCGA-COAD","TCGA-READ")
#mRNA与lncRNA
sapply(projects, function(project){  
  # 查询
  query <- GDCquery(project = project,
                    data.category = "Transcriptome Profiling",
                    data.type = "Gene Expression Quantification",
                    workflow.type = "STAR - Counts"
                    )
  # 下载
  GDCdownload(query, method = "api", files.per.chunk = 100) #每次下载100个文件
  # 整理
  GDCprepare(query,save = T,save.filename = paste0(project,"_mRNA.rds"))
  }
  )
#临床数据
#unique(getResults(query, cols = "data_type")),确认data.type有几种，需要的话分别下载再合并处理
sapply(projects, function(project){
  query <- GDCquery(project = project,
                    data.category = "Clinical", 
                    data.type = "Clinical Supplement",
                    data.format = "BCR XML")
  GDCdownload(query)
  clinical <- GDCprepare_clinic(query, clinical.info = "patient")
  saveRDS(clinical,file = paste0(project,"_clinical.rds"))
}
)
#miRNA
sapply(projects, function(project){
  query <- GDCquery(project = project,
                    data.category = "Transcriptome Profiling",
                    data.type = "miRNA Expression Quantification"
                    )
  GDCdownload(query)
  GDCprepare(query, save = T,save.filename = paste0(project,"_miRNA.rds")) 
})

#2.整理表达矩阵
library(SummarizedExperiment)
load("/mnt/raid5/User/bailin/project/250725COAD+READ/data/TCGA_COAD_mRNA.Rdata")
assayNames(data)#差异使用unstranded；可视化，机器学习等使用fpkm_uq_unstrand
colnames(rowData(data))
expr <- assay(data, "unstranded")
gene_info <- as.data.frame(rowData(data)[, c("gene_id", "gene_name", "gene_type")])
if (!identical(rownames(expr), rownames(gene_info))) {
  stop("表达矩阵和注释信息的行名不一致！")
}
expr_annotated <- cbind(gene_info, expr)

protein_expr <- expr_annotated[expr_annotated[, "gene_type"] == "protein_coding", -1]
#lncRNA_expr <- expr_annotated[expr_annotated[, "gene_type"] == "lncRNA", -1]
library(dplyr)
protein_expr_aggregated <- protein_expr %>%
  group_by(gene_name) %>%
  summarise(across(where(is.numeric), mean, na.rm = TRUE))
protein_expression <- as.data.frame(protein_expr_aggregated)
rownames(protein_expression) <- protein_expression$gene_name
protein_expression <- protein_expression[, -1]
write.csv(protein_expression,"COAD_protein_count.csv")
